//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GenerateFromFileApp {
    using System.Linq;
    using System.Collections.Generic;
    using System;
    
    
    public partial class ModelTemplate : ModelTemplateBase {
        
        
        #line 184 "ModelTemplate.tt"

public string ResolveObjectName(Mvp24Hours.Entity.Core.Settings.NavigationSettings nav) {
	if (nav.PropertyNameDestination.StartsWith("Id") || nav.PropertyNameDestination.EndsWith("Id"))
		return  nav.PropertyNameDestination.Replace("Id","");
	else
		return  nav.ClassNameSource;
}
public string ResolveCollectionName(Mvp24Hours.Entity.Core.Settings.NavigationSettings nav, string entityName) {
	var result = nav.ClassNameDestination.Replace("Id","").Replace(ResolveObjectName(nav),"");
	var classPropertyName = string.Format("{0}.{1}", nav.ClassNameDestination, nav.PropertyNameDestination);
	if(pluralTables.ContainsKey(classPropertyName)) {
		return pluralTables[classPropertyName];
	} else if(result == entityName) {
		return ResolveObjectName(nav);
	} else if(pluralTables.ContainsKey(nav.ClassNameDestination)) {
		return pluralTables[nav.ClassNameDestination];
	} else if(!string.IsNullOrEmpty(result)) {
		return result;
	} else {
		return nav.ClassNameDestination.Replace("Id","");
	}
}
Dictionary<string, string> pluralTables =
        new Dictionary<string, string>
    {
		/* Maps */

		/* Tables */
    };

        #line default
        #line hidden
        
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 5 "ModelTemplate.tt"
            this.Write(@"
//=====================================================================================
// Developed by Kallebe Lins (kallebe.santos@outlook.com)
// Teacher, Architect, Consultant and Project Leader
// Virtual Card: https://www.linkedin.com/in/kallebelins
//=====================================================================================
// Help build a better world!
//=====================================================================================
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;
using Mvp24Hours.Core.Entities;

namespace MyProject.MyCore
{
	/// <summary>
    /// Class representing Entity ");
            
            #line default
            #line hidden
            
            #line 24 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Entity.ClassName ));
            
            #line default
            #line hidden
            
            #line 24 "ModelTemplate.tt"
            this.Write(" in the database\r\n    /// </summary>\r\n    [DataContract(IsReference=false)]\r\n\t[Ta" +
                    "ble(\"");
            
            #line default
            #line hidden
            
            #line 27 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Entity.Name));
            
            #line default
            #line hidden
            
            #line 27 "ModelTemplate.tt"
            this.Write("\", Schema = \"");
            
            #line default
            #line hidden
            
            #line 27 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Entity.Schema));
            
            #line default
            #line hidden
            
            #line 27 "ModelTemplate.tt"
            this.Write("\")]\r\n\tpublic partial class ");
            
            #line default
            #line hidden
            
            #line 28 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Entity.ClassName ));
            
            #line default
            #line hidden
            
            #line 28 "ModelTemplate.tt"
            this.Write(" : EntityBase<int>\r\n\t{\r\n\t\t#region [ Primitive members ]\r\n\t");
            
            #line default
            #line hidden
            
            #line 31 "ModelTemplate.tt"

	foreach(var prop in Entity.Properties)
	{
	
            
            #line default
            #line hidden
            
            #line 35 "ModelTemplate.tt"
            this.Write("\t\t");
            
            #line default
            #line hidden
            
            #line 35 "ModelTemplate.tt"
  if(prop.IsPrimaryKey) { 
            
            #line default
            #line hidden
            
            #line 36 "ModelTemplate.tt"
            this.Write("\t\t\t");
            
            #line default
            #line hidden
            
            #line 36 "ModelTemplate.tt"
  if(Entity.IdKeyName) { 
            
            #line default
            #line hidden
            
            #line 37 "ModelTemplate.tt"
            this.Write("\t\t\t\t/// <summary>\r\n\t\t\t\t/// Gets or sets field Id\r\n\t\t\t\t/// </summary>\r\n\t\t\t\t[Key]\r\n" +
                    "\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 41 "ModelTemplate.tt"
 if(prop.Identity) { 
            
            #line default
            #line hidden
            
            #line 42 "ModelTemplate.tt"
            this.Write("\t\t\t\t\t[DatabaseGenerated(DatabaseGeneratedOption.Identity)]\r\n\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 43 "ModelTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 44 "ModelTemplate.tt"
            this.Write("\t\t\t\t\t[DatabaseGenerated(DatabaseGeneratedOption.None)]\r\n\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 45 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 46 "ModelTemplate.tt"
            this.Write("\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 46 "ModelTemplate.tt"
 if(!string.IsNullOrEmpty(prop.DisplayName) && prop.DisplayName != prop.Name) { 
            
            #line default
            #line hidden
            
            #line 47 "ModelTemplate.tt"
            this.Write("\t\t\t\t\t[DisplayName(\"");
            
            #line default
            #line hidden
            
            #line 47 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.DisplayName));
            
            #line default
            #line hidden
            
            #line 47 "ModelTemplate.tt"
            this.Write("\")]\r\n\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 48 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 49 "ModelTemplate.tt"
            this.Write("\t\t\t\t[DataMember]\r\n\t\t\t\t[Column(\"");
            
            #line default
            #line hidden
            
            #line 50 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.Name));
            
            #line default
            #line hidden
            
            #line 50 "ModelTemplate.tt"
            this.Write("\")]\r\n\t\t\t\tpublic override ");
            
            #line default
            #line hidden
            
            #line 51 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.ClrType));
            
            #line default
            #line hidden
            
            #line 51 "ModelTemplate.tt"
            this.Write(" Id { get; set; }\r\n\t\t\t");
            
            #line default
            #line hidden
            
            #line 52 "ModelTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 53 "ModelTemplate.tt"
            this.Write("\t\t\t\t/// <summary>\r\n\t\t\t\t/// Gets or sets field Id\r\n\t\t\t\t/// </summary>\r\n\t\t\t\t[NotMap" +
                    "ped]\r\n\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 57 "ModelTemplate.tt"
 if(!string.IsNullOrEmpty(prop.DisplayName) && prop.DisplayName != prop.Name) { 
            
            #line default
            #line hidden
            
            #line 58 "ModelTemplate.tt"
            this.Write("\t\t\t\t\t[DisplayName(\"");
            
            #line default
            #line hidden
            
            #line 58 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.DisplayName));
            
            #line default
            #line hidden
            
            #line 58 "ModelTemplate.tt"
            this.Write("\")]\r\n\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 59 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 60 "ModelTemplate.tt"
            this.Write("\t\t\t\t[DataMember]\r\n\t\t\t\tpublic override ");
            
            #line default
            #line hidden
            
            #line 61 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.ClrType));
            
            #line default
            #line hidden
            
            #line 61 "ModelTemplate.tt"
            this.Write(" Id { get { return this.");
            
            #line default
            #line hidden
            
            #line 61 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.PropertyName));
            
            #line default
            #line hidden
            
            #line 61 "ModelTemplate.tt"
            this.Write("; } set { this.");
            
            #line default
            #line hidden
            
            #line 61 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.PropertyName));
            
            #line default
            #line hidden
            
            #line 61 "ModelTemplate.tt"
            this.Write(" = value; } }\r\n\r\n\t\t\t\t/// <summary>\r\n\t\t\t\t/// Gets or sets field ");
            
            #line default
            #line hidden
            
            #line 64 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.PropertyName));
            
            #line default
            #line hidden
            
            #line 64 "ModelTemplate.tt"
            this.Write("\r\n\t\t\t\t/// </summary>\r\n\t\t\t\t[Key]\r\n\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 67 "ModelTemplate.tt"
 if(prop.Identity) { 
            
            #line default
            #line hidden
            
            #line 68 "ModelTemplate.tt"
            this.Write("\t\t\t\t\t[DatabaseGenerated(DatabaseGeneratedOption.Identity)]\r\n\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 69 "ModelTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 70 "ModelTemplate.tt"
            this.Write("\t\t\t\t\t[DatabaseGenerated(DatabaseGeneratedOption.None)]\r\n\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 71 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 72 "ModelTemplate.tt"
            this.Write("\t\t\t\t[IgnoreDataMember]\r\n\t\t\t\t[Column(\"");
            
            #line default
            #line hidden
            
            #line 73 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.Name));
            
            #line default
            #line hidden
            
            #line 73 "ModelTemplate.tt"
            this.Write("\")]\r\n\t\t\t\tpublic virtual ");
            
            #line default
            #line hidden
            
            #line 74 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.ClrType));
            
            #line default
            #line hidden
            
            #line 74 "ModelTemplate.tt"
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 74 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.PropertyName));
            
            #line default
            #line hidden
            
            #line 74 "ModelTemplate.tt"
            this.Write(" { get; set; }\r\n\t\t\t");
            
            #line default
            #line hidden
            
            #line 75 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 76 "ModelTemplate.tt"
            this.Write("\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 77 "ModelTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 78 "ModelTemplate.tt"
            this.Write("\t\t\t/// <summary>\r\n\t\t\t/// Gets or sets field ");
            
            #line default
            #line hidden
            
            #line 79 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.PropertyName));
            
            #line default
            #line hidden
            
            #line 79 "ModelTemplate.tt"
            this.Write("\r\n\t\t\t/// </summary>\r\n\t\t\t[DataMember] \r\n\t\t");
            
            #line default
            #line hidden
            
            #line 82 "ModelTemplate.tt"
 if(prop.RangeStart != null || prop.RangeEnd != null) { 
            
            #line default
            #line hidden
            
            #line 83 "ModelTemplate.tt"
            this.Write("\t\t\t[Range(");
            
            #line default
            #line hidden
            
            #line 83 "ModelTemplate.tt"
 if(prop.RangeStart != null) { 
            
            #line default
            #line hidden
            
            #line 84 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.RangeStart));
            
            #line default
            #line hidden
            
            #line 84 "ModelTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 85 "ModelTemplate.tt"
            this.Write("0");
            
            #line default
            #line hidden
            
            #line 85 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 86 "ModelTemplate.tt"
            this.Write(",");
            
            #line default
            #line hidden
            
            #line 86 "ModelTemplate.tt"
 if(prop.RangeEnd != null) { 
            
            #line default
            #line hidden
            
            #line 87 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.RangeEnd));
            
            #line default
            #line hidden
            
            #line 87 "ModelTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 88 "ModelTemplate.tt"
            this.Write("double.MaxValue");
            
            #line default
            #line hidden
            
            #line 88 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 89 "ModelTemplate.tt"
 if(!string.IsNullOrEmpty(prop.RangeErrorMessage)) { 
            
            #line default
            #line hidden
            
            #line 90 "ModelTemplate.tt"
            this.Write(", ErrorMessage = \"");
            
            #line default
            #line hidden
            
            #line 90 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.RangeErrorMessage));
            
            #line default
            #line hidden
            
            #line 90 "ModelTemplate.tt"
            this.Write("\"");
            
            #line default
            #line hidden
            
            #line 90 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 91 "ModelTemplate.tt"
            this.Write(")] \r\n\t\t");
            
            #line default
            #line hidden
            
            #line 92 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 93 "ModelTemplate.tt"
            this.Write("\t\t");
            
            #line default
            #line hidden
            
            #line 93 "ModelTemplate.tt"
 if(!string.IsNullOrEmpty(prop.DisplayFormat)) { 
            
            #line default
            #line hidden
            
            #line 94 "ModelTemplate.tt"
            this.Write("\t\t\t[DisplayFormat(DataFormatString = \"");
            
            #line default
            #line hidden
            
            #line 94 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.DisplayFormat));
            
            #line default
            #line hidden
            
            #line 94 "ModelTemplate.tt"
            this.Write("\")]\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 95 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 96 "ModelTemplate.tt"
            this.Write("\t\t");
            
            #line default
            #line hidden
            
            #line 96 "ModelTemplate.tt"
 if(!string.IsNullOrEmpty(prop.ReqularExpression)) { 
            
            #line default
            #line hidden
            
            #line 97 "ModelTemplate.tt"
            this.Write("\t\t\t[RegularExpression(\"");
            
            #line default
            #line hidden
            
            #line 97 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.ReqularExpression));
            
            #line default
            #line hidden
            
            #line 97 "ModelTemplate.tt"
            this.Write("\"");
            
            #line default
            #line hidden
            
            #line 97 "ModelTemplate.tt"
 if(!string.IsNullOrEmpty(prop.ReqularExpressionErrorMessage)) { 
            
            #line default
            #line hidden
            
            #line 98 "ModelTemplate.tt"
            this.Write(", ErrorMessage = \"");
            
            #line default
            #line hidden
            
            #line 98 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.ReqularExpressionErrorMessage));
            
            #line default
            #line hidden
            
            #line 98 "ModelTemplate.tt"
            this.Write("\"");
            
            #line default
            #line hidden
            
            #line 98 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 99 "ModelTemplate.tt"
            this.Write(")] \r\n\t\t");
            
            #line default
            #line hidden
            
            #line 100 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 101 "ModelTemplate.tt"
            this.Write("\t\t");
            
            #line default
            #line hidden
            
            #line 101 "ModelTemplate.tt"
 if(!string.IsNullOrEmpty(prop.DisplayName) && prop.DisplayName != prop.Name) { 
            
            #line default
            #line hidden
            
            #line 102 "ModelTemplate.tt"
            this.Write("\t\t\t[DisplayName(\"");
            
            #line default
            #line hidden
            
            #line 102 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.DisplayName));
            
            #line default
            #line hidden
            
            #line 102 "ModelTemplate.tt"
            this.Write("\")]\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 103 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 104 "ModelTemplate.tt"
            this.Write("\t\t\t[Column(\"");
            
            #line default
            #line hidden
            
            #line 104 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.Name));
            
            #line default
            #line hidden
            
            #line 104 "ModelTemplate.tt"
            this.Write("\")]\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 105 "ModelTemplate.tt"
  if(!prop.IsNullable) { 
            
            #line default
            #line hidden
            
            #line 106 "ModelTemplate.tt"
            this.Write("\t\t\t[Required");
            
            #line default
            #line hidden
            
            #line 106 "ModelTemplate.tt"
 if(!string.IsNullOrEmpty(prop.RequiredErrorMessage)) { 
            
            #line default
            #line hidden
            
            #line 107 "ModelTemplate.tt"
            this.Write("(ErrorMessage = \"");
            
            #line default
            #line hidden
            
            #line 107 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.RequiredErrorMessage));
            
            #line default
            #line hidden
            
            #line 107 "ModelTemplate.tt"
            this.Write("\")");
            
            #line default
            #line hidden
            
            #line 107 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 108 "ModelTemplate.tt"
            this.Write("]\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 109 "ModelTemplate.tt"
  } 
            
            #line default
            #line hidden
            
            #line 110 "ModelTemplate.tt"
            this.Write("\t\t");
            
            #line default
            #line hidden
            
            #line 110 "ModelTemplate.tt"
  if(prop.ClrType == "string" && prop.MaxLength > 0) { 
            
            #line default
            #line hidden
            
            #line 111 "ModelTemplate.tt"
            this.Write("\t\t\t[StringLength(");
            
            #line default
            #line hidden
            
            #line 111 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.MaxLength));
            
            #line default
            #line hidden
            
            #line 111 "ModelTemplate.tt"
 if(!string.IsNullOrEmpty(prop.StringLengthErrorMessage)) { 
            
            #line default
            #line hidden
            
            #line 112 "ModelTemplate.tt"
            this.Write(", ErrorMessage = \"");
            
            #line default
            #line hidden
            
            #line 112 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.StringLengthErrorMessage));
            
            #line default
            #line hidden
            
            #line 112 "ModelTemplate.tt"
            this.Write("\"");
            
            #line default
            #line hidden
            
            #line 112 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 113 "ModelTemplate.tt"
 if(prop.MinLength != null && prop.MinLength > 0) { 
            
            #line default
            #line hidden
            
            #line 114 "ModelTemplate.tt"
            this.Write(", MinimumLength = ");
            
            #line default
            #line hidden
            
            #line 114 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.MinLength));
            
            #line default
            #line hidden
            
            #line 114 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 115 "ModelTemplate.tt"
            this.Write(")]\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 116 "ModelTemplate.tt"
  } 
            
            #line default
            #line hidden
            
            #line 117 "ModelTemplate.tt"
            this.Write("\t\t\tpublic virtual ");
            
            #line default
            #line hidden
            
            #line 117 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.ClrType));
            
            #line default
            #line hidden
            
            #line 117 "ModelTemplate.tt"
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 117 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prop.PropertyName));
            
            #line default
            #line hidden
            
            #line 117 "ModelTemplate.tt"
            this.Write(" { get; set; }\r\n\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 119 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 120 "ModelTemplate.tt"
            this.Write("\t");
            
            #line default
            #line hidden
            
            #line 120 "ModelTemplate.tt"

	}
	
            
            #line default
            #line hidden
            
            #line 123 "ModelTemplate.tt"
            this.Write("\t\t#endregion\r\n\r\n\t\t#region [ Object members ]\r\n\t");
            
            #line default
            #line hidden
            
            #line 126 "ModelTemplate.tt"

	foreach(var nav in Models.GetNavigations(Entity))
	{
		if(nav.EntitySource == Entity.Name && nav.EntitySource != nav.EntityDestination) continue;
	
            
            #line default
            #line hidden
            
            #line 131 "ModelTemplate.tt"
            this.Write("\t\t/// <summary>\r\n\t\t/// Gets or sets instance of the ");
            
            #line default
            #line hidden
            
            #line 132 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.ClassNameSource));
            
            #line default
            #line hidden
            
            #line 132 "ModelTemplate.tt"
            this.Write(" Entity\r\n\t\t/// </summary>\r\n\t\t/// <remarks>\r\n\t\t/// Entity Source: ");
            
            #line default
            #line hidden
            
            #line 135 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.ClassNameSource));
            
            #line default
            #line hidden
            
            #line 135 "ModelTemplate.tt"
            this.Write(".");
            
            #line default
            #line hidden
            
            #line 135 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.PropertyNameSource));
            
            #line default
            #line hidden
            
            #line 135 "ModelTemplate.tt"
            this.Write("\r\n\t\t/// Entity Destination: ");
            
            #line default
            #line hidden
            
            #line 136 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.ClassNameDestination));
            
            #line default
            #line hidden
            
            #line 136 "ModelTemplate.tt"
            this.Write(".");
            
            #line default
            #line hidden
            
            #line 136 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.PropertyNameDestination));
            
            #line default
            #line hidden
            
            #line 136 "ModelTemplate.tt"
            this.Write("\r\n\t\t/// Object String: ");
            
            #line default
            #line hidden
            
            #line 137 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(String.Concat(nav.ClassNameSource,nav.PropertyNameSource,nav.ClassNameDestination,nav.PropertyNameDestination)));
            
            #line default
            #line hidden
            
            #line 137 "ModelTemplate.tt"
            this.Write("\r\n\t\t/// </remarks>\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 139 "ModelTemplate.tt"
 
		if (String.Concat(nav.ClassNameSource,nav.PropertyNameSource,nav.ClassNameDestination,nav.PropertyNameDestination) == "CondominioIdPessoaCondominioCondominioId") {
		
            
            #line default
            #line hidden
            
            #line 142 "ModelTemplate.tt"
            this.Write("\t\t// [DataMember]\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 143 "ModelTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 144 "ModelTemplate.tt"
            this.Write("\t\t[DataMember]\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 145 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 146 "ModelTemplate.tt"
            this.Write("\t\t[ForeignKey(nameof(");
            
            #line default
            #line hidden
            
            #line 146 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.PropertyNameDestination));
            
            #line default
            #line hidden
            
            #line 146 "ModelTemplate.tt"
            this.Write("))]\r\n\t\tpublic virtual ");
            
            #line default
            #line hidden
            
            #line 147 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.ClassNameSource));
            
            #line default
            #line hidden
            
            #line 147 "ModelTemplate.tt"
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 147 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ResolveObjectName(nav)));
            
            #line default
            #line hidden
            
            #line 147 "ModelTemplate.tt"
            this.Write(" { get; set; }\r\n\t");
            
            #line default
            #line hidden
            
            #line 148 "ModelTemplate.tt"

	}
	
            
            #line default
            #line hidden
            
            #line 151 "ModelTemplate.tt"
            this.Write("\t\t#endregion\r\n\r\n\t\t#region [ Collections members ]\r\n\t");
            
            #line default
            #line hidden
            
            #line 154 "ModelTemplate.tt"

	foreach (var nav in Models.GetNavigations(Entity)) 
	{
		if(nav.EntitySource != Entity.Name && nav.EntitySource != nav.EntityDestination) continue;
	
            
            #line default
            #line hidden
            
            #line 159 "ModelTemplate.tt"
            this.Write("\t\t/// <summary>\r\n\t\t/// <summary>\r\n\t\t/// Gets or sets collection of the ");
            
            #line default
            #line hidden
            
            #line 161 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.ClassNameDestination));
            
            #line default
            #line hidden
            
            #line 161 "ModelTemplate.tt"
            this.Write(" Entity\r\n\t\t/// </summary>\r\n\t\t/// <remarks>\r\n\t\t/// Entity Source: ");
            
            #line default
            #line hidden
            
            #line 164 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.ClassNameSource));
            
            #line default
            #line hidden
            
            #line 164 "ModelTemplate.tt"
            this.Write(".");
            
            #line default
            #line hidden
            
            #line 164 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.PropertyNameSource));
            
            #line default
            #line hidden
            
            #line 164 "ModelTemplate.tt"
            this.Write("\r\n\t\t/// Entity Destination: ");
            
            #line default
            #line hidden
            
            #line 165 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.ClassNameDestination));
            
            #line default
            #line hidden
            
            #line 165 "ModelTemplate.tt"
            this.Write(".");
            
            #line default
            #line hidden
            
            #line 165 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.PropertyNameDestination));
            
            #line default
            #line hidden
            
            #line 165 "ModelTemplate.tt"
            this.Write("\r\n\t\t/// Collection String: ");
            
            #line default
            #line hidden
            
            #line 166 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(String.Concat(nav.ClassNameSource,nav.PropertyNameSource,nav.ClassNameDestination,nav.PropertyNameDestination)));
            
            #line default
            #line hidden
            
            #line 166 "ModelTemplate.tt"
            this.Write("\r\n\t\t/// </remarks>\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 168 "ModelTemplate.tt"
 
		if (String.Concat(nav.ClassNameSource,nav.PropertyNameSource,nav.ClassNameDestination,nav.PropertyNameDestination) == "PessoaIdPessoaCondominioPessoaFisicaId") {
		
            
            #line default
            #line hidden
            
            #line 171 "ModelTemplate.tt"
            this.Write("\t\t// [DataMember]\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 172 "ModelTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 173 "ModelTemplate.tt"
            this.Write("\t\t[DataMember]\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 174 "ModelTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 175 "ModelTemplate.tt"
            this.Write("\t\t[InverseProperty(\"");
            
            #line default
            #line hidden
            
            #line 175 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ResolveObjectName(nav)));
            
            #line default
            #line hidden
            
            #line 175 "ModelTemplate.tt"
            this.Write("\")]\r\n\t\tpublic virtual IList<");
            
            #line default
            #line hidden
            
            #line 176 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nav.ClassNameDestination));
            
            #line default
            #line hidden
            
            #line 176 "ModelTemplate.tt"
            this.Write("> ");
            
            #line default
            #line hidden
            
            #line 176 "ModelTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ResolveCollectionName(nav, Entity.ClassName)));
            
            #line default
            #line hidden
            
            #line 176 "ModelTemplate.tt"
            this.Write(" { get; set; }\r\n\t");
            
            #line default
            #line hidden
            
            #line 177 "ModelTemplate.tt"

	}
	
            
            #line default
            #line hidden
            
            #line 180 "ModelTemplate.tt"
            this.Write("\t\t#endregion\r\n\r\n\t}\r\n}\r\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class ModelTemplateBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
